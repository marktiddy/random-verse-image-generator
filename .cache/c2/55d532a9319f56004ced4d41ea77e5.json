{"id":"node_modules/html-to-image/lib/embedWebFonts.js","dependencies":[{"name":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/package.json","includedInParent":true,"mtime":1590048048846},{"name":"/Users/marktiddy/Developer/personal-projects/.babelrc","includedInParent":true,"mtime":1586614098237},{"name":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/node_modules/html-to-image/package.json","includedInParent":true,"mtime":1590009282520},{"name":"./utils","loc":{"line":10,"column":22},"parent":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/node_modules/html-to-image/lib/embedWebFonts.js","resolved":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/node_modules/html-to-image/lib/utils.js"},{"name":"./embedResources","loc":{"line":11,"column":44},"parent":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/node_modules/html-to-image/lib/embedWebFonts.js","resolved":"/Users/marktiddy/Developer/personal-projects/random-verse-image-generator/node_modules/html-to-image/lib/embedResources.js"}],"generated":{"js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar embedResources_1 = __importStar(require(\"./embedResources\"));\nfunction parseCSS(source) {\n    if (source === undefined) {\n        return [];\n    }\n    var cssText = source;\n    var css = [];\n    var cssKeyframeRegex = '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})';\n    var combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]'\n        + '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'; // to match css & media queries together\n    var cssCommentsRegex = new RegExp('(\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)', 'gi');\n    // strip out comments\n    cssText = cssText.replace(cssCommentsRegex, '');\n    var keyframesRegex = new RegExp(cssKeyframeRegex, 'gi');\n    var arr;\n    while (true) {\n        arr = keyframesRegex.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    // unified regex\n    var unified = new RegExp(combinedCSSRegex, 'gi');\n    while (true) {\n        arr = unified.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    return css;\n}\nfunction fetchCSS(url, sheet) {\n    return fetch(url).then(function (res) {\n        return {\n            url: url,\n            cssText: res.text(),\n        };\n    }, function (e) {\n        console.log('ERROR FETCHING CSS: ', e.toString());\n    });\n}\nfunction embedFonts(data) {\n    return data.cssText.then(function (resolved) {\n        var cssText = resolved;\n        var fontLocations = cssText.match(/url\\([^)]+\\)/g) || [];\n        var fontLoadedPromises = fontLocations.map(function (location) {\n            var url = location.replace(/url\\(([^]+)\\)/g, '$1');\n            if (!url.startsWith('https://')) {\n                var source = data.url;\n                url = new URL(url, source).href;\n            }\n            return new Promise(function (resolve, reject) {\n                fetch(url)\n                    .then(function (res) { return res.blob(); })\n                    .then(function (blob) {\n                    var reader = new FileReader();\n                    reader.addEventListener('load', function (res) {\n                        // Side Effect\n                        cssText = cssText.replace(location, \"url(\" + reader.result + \")\");\n                        resolve([location, reader.result]);\n                    });\n                    reader.readAsDataURL(blob);\n                })\n                    .catch(reject);\n            });\n        });\n        return Promise.all(fontLoadedPromises).then(function () { return cssText; });\n    });\n}\nfunction getCssRules(styleSheets) {\n    var ret = [];\n    var promises = [];\n    // First loop inlines imports\n    styleSheets.forEach(function (sheet) {\n        if ('cssRules' in sheet) {\n            try {\n                utils_1.toArray(sheet.cssRules).forEach(function (item) {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        promises.push(fetchCSS(item.href, sheet)\n                            .then(embedFonts)\n                            .then(function (cssText) {\n                            var parsed = parseCSS(cssText);\n                            parsed.forEach(function (rule) {\n                                sheet.insertRule(rule, sheet.cssRules.length);\n                            });\n                        })\n                            .catch(function (e) {\n                            console.log('Error loading remote css', e.toString());\n                        }));\n                    }\n                });\n            }\n            catch (e) {\n                var inline_1 = styleSheets.find(function (a) { return a.href === null; }) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    promises.push(fetchCSS(sheet.href, inline_1)\n                        .then(embedFonts)\n                        .then(function (cssText) {\n                        var parsed = parseCSS(cssText);\n                        parsed.forEach(function (rule) {\n                            inline_1.insertRule(rule, sheet.cssRules.length);\n                        });\n                    })\n                        .catch(function (e) {\n                        console.log('Error loading remote stylesheet', e.toString());\n                    }));\n                }\n                console.log('Error inlining remote css file', e.toString());\n            }\n        }\n    });\n    return Promise\n        .all(promises)\n        .then(function () {\n        // Second loop parses rules\n        styleSheets.forEach(function (sheet) {\n            if ('cssRules' in sheet) {\n                try {\n                    utils_1.toArray(sheet.cssRules).forEach(function (item) {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.log(\"Error while reading CSS rules from \" + sheet.href, e.toString());\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter(function (rule) { return rule.type === CSSRule.FONT_FACE_RULE; })\n        .filter(function (rule) { return embedResources_1.shouldEmbed(rule.style.getPropertyValue('src')); });\n}\nfunction parseWebFontRules(clonedNode) {\n    return new Promise(function (resolve, reject) {\n        if (!clonedNode.ownerDocument) {\n            reject(new Error('Provided element is not within a Document'));\n        }\n        resolve(utils_1.toArray(clonedNode.ownerDocument.styleSheets));\n    })\n        .then(getCssRules)\n        .then(getWebFontRules);\n}\nexports.parseWebFontRules = parseWebFontRules;\nfunction embedWebFonts(clonedNode, options) {\n    return parseWebFontRules(clonedNode)\n        .then(function (rules) { return Promise.all(rules.map(function (rule) {\n        var baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources_1.default(rule.cssText, baseUrl, options);\n    })); })\n        .then(function (cssStrings) { return cssStrings.join('\\n'); })\n        .then(function (cssString) {\n        var styleNode = document.createElement('style');\n        var sytleContent = document.createTextNode(cssString);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n        return clonedNode;\n    });\n}\nexports.default = embedWebFonts;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/html-to-image/lib/embedWebFonts.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}}],"sources":{"node_modules/html-to-image/lib/embedWebFonts.js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar embedResources_1 = __importStar(require(\"./embedResources\"));\nfunction parseCSS(source) {\n    if (source === undefined) {\n        return [];\n    }\n    var cssText = source;\n    var css = [];\n    var cssKeyframeRegex = '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})';\n    var combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]'\n        + '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'; // to match css & media queries together\n    var cssCommentsRegex = new RegExp('(\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)', 'gi');\n    // strip out comments\n    cssText = cssText.replace(cssCommentsRegex, '');\n    var keyframesRegex = new RegExp(cssKeyframeRegex, 'gi');\n    var arr;\n    while (true) {\n        arr = keyframesRegex.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    // unified regex\n    var unified = new RegExp(combinedCSSRegex, 'gi');\n    while (true) {\n        arr = unified.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    return css;\n}\nfunction fetchCSS(url, sheet) {\n    return fetch(url).then(function (res) {\n        return {\n            url: url,\n            cssText: res.text(),\n        };\n    }, function (e) {\n        console.log('ERROR FETCHING CSS: ', e.toString());\n    });\n}\nfunction embedFonts(data) {\n    return data.cssText.then(function (resolved) {\n        var cssText = resolved;\n        var fontLocations = cssText.match(/url\\([^)]+\\)/g) || [];\n        var fontLoadedPromises = fontLocations.map(function (location) {\n            var url = location.replace(/url\\(([^]+)\\)/g, '$1');\n            if (!url.startsWith('https://')) {\n                var source = data.url;\n                url = new URL(url, source).href;\n            }\n            return new Promise(function (resolve, reject) {\n                fetch(url)\n                    .then(function (res) { return res.blob(); })\n                    .then(function (blob) {\n                    var reader = new FileReader();\n                    reader.addEventListener('load', function (res) {\n                        // Side Effect\n                        cssText = cssText.replace(location, \"url(\" + reader.result + \")\");\n                        resolve([location, reader.result]);\n                    });\n                    reader.readAsDataURL(blob);\n                })\n                    .catch(reject);\n            });\n        });\n        return Promise.all(fontLoadedPromises).then(function () { return cssText; });\n    });\n}\nfunction getCssRules(styleSheets) {\n    var ret = [];\n    var promises = [];\n    // First loop inlines imports\n    styleSheets.forEach(function (sheet) {\n        if ('cssRules' in sheet) {\n            try {\n                utils_1.toArray(sheet.cssRules).forEach(function (item) {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        promises.push(fetchCSS(item.href, sheet)\n                            .then(embedFonts)\n                            .then(function (cssText) {\n                            var parsed = parseCSS(cssText);\n                            parsed.forEach(function (rule) {\n                                sheet.insertRule(rule, sheet.cssRules.length);\n                            });\n                        })\n                            .catch(function (e) {\n                            console.log('Error loading remote css', e.toString());\n                        }));\n                    }\n                });\n            }\n            catch (e) {\n                var inline_1 = styleSheets.find(function (a) { return a.href === null; }) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    promises.push(fetchCSS(sheet.href, inline_1)\n                        .then(embedFonts)\n                        .then(function (cssText) {\n                        var parsed = parseCSS(cssText);\n                        parsed.forEach(function (rule) {\n                            inline_1.insertRule(rule, sheet.cssRules.length);\n                        });\n                    })\n                        .catch(function (e) {\n                        console.log('Error loading remote stylesheet', e.toString());\n                    }));\n                }\n                console.log('Error inlining remote css file', e.toString());\n            }\n        }\n    });\n    return Promise\n        .all(promises)\n        .then(function () {\n        // Second loop parses rules\n        styleSheets.forEach(function (sheet) {\n            if ('cssRules' in sheet) {\n                try {\n                    utils_1.toArray(sheet.cssRules).forEach(function (item) {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.log(\"Error while reading CSS rules from \" + sheet.href, e.toString());\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter(function (rule) { return rule.type === CSSRule.FONT_FACE_RULE; })\n        .filter(function (rule) { return embedResources_1.shouldEmbed(rule.style.getPropertyValue('src')); });\n}\nfunction parseWebFontRules(clonedNode) {\n    return new Promise(function (resolve, reject) {\n        if (!clonedNode.ownerDocument) {\n            reject(new Error('Provided element is not within a Document'));\n        }\n        resolve(utils_1.toArray(clonedNode.ownerDocument.styleSheets));\n    })\n        .then(getCssRules)\n        .then(getWebFontRules);\n}\nexports.parseWebFontRules = parseWebFontRules;\nfunction embedWebFonts(clonedNode, options) {\n    return parseWebFontRules(clonedNode)\n        .then(function (rules) { return Promise.all(rules.map(function (rule) {\n        var baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources_1.default(rule.cssText, baseUrl, options);\n    })); })\n        .then(function (cssStrings) { return cssStrings.join('\\n'); })\n        .then(function (cssString) {\n        var styleNode = document.createElement('style');\n        var sytleContent = document.createTextNode(cssString);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n        return clonedNode;\n    });\n}\nexports.default = embedWebFonts;\n"},"lineCount":181}},"error":null,"hash":"8fc1cb21eba40fdc0deccca94bdec4ed","cacheData":{"env":{}}}